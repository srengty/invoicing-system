name: Deploy Invoice

on:
  push:
    branches: [main]
env:
  PASSWORD_SERVER: dice@gic
  DB_CONNECTION: mysql
  DB_DATABASE: invoices
  DB_HOST: localhost
  DB_PORT: 3306
  DB_USERNAME: invoices
  DB_PASSWORD: invoice@gicitc
  MAIL_USERNAME: itcfinance168@gmail.com
  MAIL_FROM_ADDRESS: itcfinance168@gmail.com
jobs:
  deploy:
    runs-on: self-hosted

    steps:
    # - name: Checkout repo
    #   uses: actions/checkout@v3

    - name: Set php for running laravel
      run: |
          echo "$PASSWORD_SERVER" | sudo -S add-apt-repository ppa:ondrej/php
          echo "$PASSWORD_SERVER" | sudo -S apt install software-properties-common -y
          echo "$PASSWORD_SERVER" | sudo -S apt update
          echo "$PASSWORD_SERVER" | sudo -S apt install -y php8.4 php8.4-mysql php8.4-cli php8.4-mbstring php8.4-xml php8.4-bcmath php8.4-curl php8.4-zip php8.4-tokenizer php8.4-common php8.4-mysql php8.4-sqlite3 php8.4-gd unzip php8.4-fpm
          echo "$PASSWORD_SERVER" | sudo -S update-alternatives --set php /usr/bin/php8.4
          echo "$PASSWORD_SERVER" | sudo -S systemctl restart php8.4-fpm
    - name: Install dependencies
      run: |
        composer install --no-dev --optimize-autoloader
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Overwrite vite.config.prod.js
      run: |
        cat << 'EOF' > vite.config.prod.js
        import { defineConfig } from 'vite';
        import laravel from 'laravel-vite-plugin';
        import vue from '@vitejs/plugin-vue';

        export default defineConfig({
            server: {
                hmr: {
                    host: 'finance.itc.edu.kh',
                },
                https: true,
                cors: {
                    origin: [
                        'https://finance.itc.edu.kh',
                    ],

                },
            },
            plugins: [
                laravel({
                    input: 'resources/js/app.js',
                    refresh: true,
                    detectTls: 'finance.itc.edu.kh',
                }),
                vue({
                    template: {
                        transformAssetUrls: {
                            base: null,
                            includeAbsolute: false,
                        },
                    },
                }),
            ],
        });

        EOF
    - name: Create .env file
      run: |
        cat << 'EOF' > .env
        APP_NAME=Laravel
        APP_ENV=PRODUCTION
        APP_KEY=
        APP_DEBUG=false
        APP_TIMEZONE=UTC
        APP_URL=https://finance.itc.edu.kh
        APP_LOCALE=en
        APP_FALLBACK_LOCALE=en
        APP_FAKER_LOCALE=en_US

        APP_MAINTENANCE_DRIVER=file
        # APP_MAINTENANCE_STORE=database

        PHP_CLI_SERVER_WORKERS=4

        BCRYPT_ROUNDS=12

        LOG_CHANNEL=stack
        LOG_STACK=single
        LOG_DEPRECATIONS_CHANNEL=null
        LOG_LEVEL=debug

        DB_CONNECTION=mysql
        DB_HOST=127.0.0.1
        DB_PORT=3306
        DB_DATABASE=invoicing_system
        DB_USERNAME=root
        DB_PASSWORD=

        SESSION_DRIVER=database
        SESSION_LIFETIME=120
        SESSION_ENCRYPT=false
        SESSION_PATH=/
        SESSION_DOMAIN=null

        BROADCAST_CONNECTION=log
        FILESYSTEM_DISK=local
        QUEUE_CONNECTION=database

        CACHE_STORE=database
        CACHE_PREFIX=


        MEMCACHED_HOST=127.0.0.1
        REDIS_CLIENT=phpredis
        REDIS_HOST=127.0.0.1
        REDIS_PASSWORD=null
        REDIS_PORT=6379

        MAIL_MAILER=log
        MAIL_SCHEME=null
        MAIL_HOST=127.0.0.1
        MAIL_PORT=2525
        MAIL_USERNAME=null
        MAIL_PASSWORD="rvle ineh zvpa dutt"
        MAIL_FROM_ADDRESS="hello@example.com"
        MAIL_FROM_NAME="ITC Finance"

        AWS_ACCESS_KEY_ID=
        AWS_SECRET_ACCESS_KEY=
        AWS_DEFAULT_REGION=us-east-1
        AWS_BUCKET=
        AWS_USE_PATH_STYLE_ENDPOINT=false

        VITE_APP_NAME="${APP_NAME}"

        EOF
    - name: Generate APP_KEY
      run: php artisan key:generate
    - name: Update .env for Database
      run: |
        sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=${{ env.DB_CONNECTION }}/' .env
        sed -i 's/^DB_DATABASE=.*/DB_DATABASE=${{ env.DB_DATABASE }}/' .env
        sed -i 's/^DB_HOST=.*/DB_HOST=${{ env.DB_HOST }}/' .env
        sed -i 's/^DB_PORT=.*/DB_PORT=${{ env.DB_PORT }}/' .env
        sed -i 's/^DB_USERNAME=.*/DB_USERNAME=${{ env.DB_USERNAME }}/' .env
        sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=${{ env.DB_PASSWORD }}/' .env
        sed -i 's/^MAIL_USERNAME=.*/MAIL_USERNAME=${{ env.MAIL_USERNAME}}/' .env
        sed -i 's/^MAIL_FROM_ADDRESS=.*/MAIL_FROM_ADDRESS=${{ env.MAIL_FROM_ADDRESS}}/' .env
    # - name: Laravel Migrate & Cache
    #   run: |
    #     php artisan migrate --force
    #     php artisan config:cache
    #     php artisan route:cache
    #     php artisan view:cache
    - name: Deploy New Version
      run: |
        NEW_RELEASE_DIR=/var/www/invoice/releases/$(date +%Y%m%d%H%M%S)
        echo "$PASSWORD_SERVER" | sudo -S mkdir -p $NEW_RELEASE_DIR
        echo "$PASSWORD_SERVER" | sudo -S chown -R www-data:www-data $NEW_RELEASE_DIR
        echo "$PASSWORD_SERVER" | sudo -S chmod -R 777 $NEW_RELEASE_DIR
        echo "$PASSWORD_SERVER" | sudo -S rsync -av --exclude=.git --exclude=node_modules . $NEW_RELEASE_DIR
        echo "$PASSWORD_SERVER" | sudo -S ln -sfn $NEW_RELEASE_DIR /var/www/invoice/current
        echo "$PASSWORD_SERVER" | sudo -S chown -R www-data:www-data /var/www/invoice
        echo "$PASSWORD_SERVER" | sudo -S chmod -R 777 /var/www/invoice
    - name: Finalize Laravel (Migrate & Cache)
      run: |
        cd /var/www/invoice/current
        npm install
        npm run build
        php artisan migrate --force
        php artisan config:clear
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        php artisan storage:link
    - name: Remove old release
      run: |
        echo "$PASSWORD_SERVER" | sudo -S bash -c '
          cd /var/www/invoice/releases || exit 1
          ls -1tr | head -n -5 | while read dir; do
            [ -n "$dir" ] && rm -rf "$dir"
          done
        '
    - name: Restart PHP & Clear OPcache
      run: |
        echo "$PASSWORD_SERVER"  | sudo -S systemctl restart php8.4-fpm
        echo "$PASSWORD_SERVER"  | sudo -S systemctl reload nginx
